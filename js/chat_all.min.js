"use strict";!function(){var e=[],t=document.querySelector("template").content.querySelector(".msg-block__answer"),o=document.querySelector(".msg-block__wrap");window.backend.load("http://localhost:3000/json/users.json",function(n){e=n,window.checkMsg=function(n){if(e.answer[n]){var l=t.cloneNode(!0);l.querySelector(".msg-block__text").textContent=e.answer[n];var r=new Date,c=r.getHours()+":"+r.getMinutes();window.timer(l.querySelector(".msg-block__time"),c);var i=JSON.parse(localStorage.getItem("msg"));console.log(i),i.text.push(e.answer[n]),i.date.push(c),i.answer.push(!0),localStorage.setItem("msg",JSON.stringify(i)),setTimeout(function(){o.appendChild(l)},1e3)}}},function(e){var t=document.createElement("div");t.style="z-index: 100; margin: 0 auto; text-align: center; background-color: red;",t.style.position="absolute",t.style.left=0,t.style.right=0,t.style.fontSize="30px",t.textContent=e,document.body.insertAdjacentElement("afterbegin",t)})}(),function(){var e=window.innerHeight;window.checkHeight=function(t){console.log(e<t),console.log(e+"|||"+t),e<t&&window.scrollTo(0,t)}}(),function(){var e=JSON.parse(localStorage.getItem("msg")),t=document.querySelector("template").content.querySelector(".msg-block_you"),o=document.querySelector(".msg-block__wrap"),n=document.querySelector("template").content.querySelector(".msg-block__answer"),l=document.querySelector(".time__line");window.renderOldMsg=function(){if(console.log(e),e){if(e.text.length)l.textContent=l.textContent+e.date[0],l.style.visibility="visible";else(r=document.createElement("div")).style="margin: 0 auto; text-align: center;",r.style.left=0,r.style.right=0,r.style.color="white",r.style.fontSize="30px",r.classList.add("his-clear"),r.textContent="History clear",o.appendChild(r);e.answer.forEach(function(l,r){if(l){var c=n.cloneNode(!0);c.querySelector(".msg-block__text").textContent=e.text[r],c.querySelector(".msg-block__time").textContent=e.date[r],o.appendChild(c)}else{var i=t.cloneNode(!0);i.querySelector(".msg-block__text").textContent=e.text[r],i.querySelector(".msg-block__time").textContent=e.date[r],o.appendChild(i)}})}else{var r;(r=document.createElement("div")).style="margin: 0 auto; text-align: center;",r.style.left=0,r.style.right=0,r.style.fontSize="30px",r.style.color="white",r.classList.add("his-clear"),r.textContent="History clear",o.appendChild(r)}}}(),function(){if(localStorage.getItem("auth")){window.renderOldMsg();var e=window.innerHeight+"px";if(document.querySelector(".mobile__wrap-chat").style.minHeight=e,console.log(localStorage.getItem("msg")),!localStorage.getItem("msg")){localStorage.setItem("msg",JSON.stringify({text:[],date:[],answer:[]}))}var t=document.querySelector("template").content.querySelector(".msg-block_you"),o=document.querySelector(".send-msg__form"),n=o.querySelector(".send-msg__btn"),l=document.querySelector(".msg-block__wrap"),r=o.querySelector("input[type=text]"),c=0,i=document.querySelector(".his-clear"),a=document.querySelector(".time__line"),s=function(){if(r.value){var e=t.cloneNode(!0);e.querySelector(".msg-block__text").textContent=r.value;var o=new Date,n=o.getMinutes();n<10&&(n="0"+n);var s=o.getHours()+":"+n;window.timer(e.querySelector(".msg-block__time"),s),i&&(i.style.visibility="hidden",a.textContent=a.textContent+s,a.style.visibility="visible"),l.appendChild(e);var u=document.querySelector(".msg-block__wrap").clientHeight;window.checkHeight(u);var d=JSON.parse(localStorage.getItem("msg"));d.text.push(r.value),d.date.push(s),d.answer.push(!1),localStorage.setItem("msg",JSON.stringify(d)),window.checkMsg(c++),r.value=""}};n.addEventListener("click",s),r.addEventListener("keydown",function(e){13===e.keyCode&&s()})}else window.location.href="http://localhost:3000/"}(),document.querySelector(".chat__dot-menu").addEventListener("click",function(){document.querySelector(".dot-menu").classList.toggle("active"),document.querySelectorAll(".dot-menu__item")[0].addEventListener("click",function(){localStorage.removeItem("msg"),location.reload()}),document.querySelectorAll(".dot-menu__item")[1].addEventListener("click",function(){localStorage.removeItem("auth"),location.reload()})}),window.timer=function(e,t){var o=0,n=setInterval(function(){o<600?(o++,e.textContent=o>60?Math.floor(o/60)+" minutes ago":o+" seconds ago"):(e.textContent=t,clearInterval(n))},1e3)};
//# sourceMappingURL=data:application/json;charset=utf8;base64,
